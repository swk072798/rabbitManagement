<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- mapper 为根元素节点， 一个namespace对应一个dao -->
<mapper namespace="com.nwafu.accountloginmanagement.dao.SuperUserDao">
    <resultMap id="SuperAdminInfo" type="com.nwafu.accountloginmanagement.entity.SuperAdminInfo">
        <id property="superUsername" column="superUsername" javaType="java.lang.String" jdbcType="VARCHAR"></id>
        <result property="superPassword" javaType = "java.lang.String" jdbcType="VARCHAR" column="superPassword"></result>
        <result property="status" javaType = "java.lang.String" jdbcType="VARCHAR" column="status"></result>
    </resultMap>

    <select id="getSuperUserInfo" parameterType="java.lang.String" resultMap="SuperAdminInfo">
        select * from super_user_info where superUsername=#{superUsername}
    </select>

    <update id="updateSuperUserStatus" parameterType="java.lang.String">
        update super_user_info set status=#{status} where superUsername=#{superUsername}
    </update>

    <insert id="addSuperUserAccount" parameterType="java.lang.String">
        insert into super_user_info(superUsername, superPassword) value (#{superUsername}, #{superPassword})
    </insert>

    <update id="updateNormalUserInfo" parameterType="java.lang.String">
        update user_info set
        <if test="newNormalUsername == null and newPassword != null">
            password = #{newPassword}
        </if>
        <if test="newNormalUsername != null and newPassword == null">
            username = #{newNormalUsername}
        </if>
        <if test="newNormalUsername != null and newPassword != null">
            username = #{newNormalUsername}, password = #{newPassword}
        </if>
        where username = #{oldNormalUsername}
    </update>

    <delete id="deleteNormalUserInfo" parameterType="java.lang.String">
        delete from user_info where username=#{username}
    </delete>

    <delete id="deleteDatabase" parameterType="java.lang.String">
        drop database ${_parameter}
    </delete>

    <delete id="deleteDatabaseInfo" parameterType="java.lang.String">
        delete from datasource_info where dbName=#{dbName}
    </delete>

    <resultMap id="NormalUserInfo" type="com.nwafu.accountloginmanagement.entity.NormalUserInfo">
        <id property="username" column="username" javaType="String" jdbcType="VARCHAR"></id>
        <result property="password" javaType = "String" jdbcType="VARCHAR" column="password"></result>
        <result property="farmUuids" javaType = "String" jdbcType="VARCHAR" column="farmUuids"></result>
        <result property="status" javaType = "String" jdbcType="VARCHAR" column="status"></result>
        <result property="registrationTime" javaType = "String" jdbcType="DATE" column="registrationTime"></result>
    </resultMap>

    <select id="getAllNormalUserInfo" resultMap="NormalUserInfo">
        select username, farmUuids, status, registrationTime from user_info
    </select>

    <delete id="deleteSubUserByParentUser" parameterType="java.lang.String">
        delete from sub_user_info where parentUser=#{parentUser}
    </delete>
</mapper>
